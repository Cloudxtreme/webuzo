<soft xmlns="http://www.softaculous.com">
	<overview>
		<img src="logo.gif" style="float:right;" alt="" />{{overview}}
	</overview>
	<features>
		{{features}}
	</features>
	<ratings>
		http://www.softaculous.com/sysapps/message_queue/HornetQ
	</ratings>
	<space>
		11400
	</space>
	<support>
		http://hornetq.jboss.org/
	</support>
	<version>
		2.4.0
	</version>
	<mod>2</mod>
	<softversion>
		4.1.9
	</softversion>
	<major>1</major>
	<release_date>16-12-2013</release_date>
	
	<requires>java</requires>		
	
	<path name="base">/usr/local/apps/hornetq</path>
	
	<extract file="hornetq-$arch.tar.gz">$appsdir</extract>
	
	<remove>/usr/local/apps/hornetq</remove>
	
	<notes>
		<center><font size="5" color="#182e7a">HornetQ Environment :</font></center><br />
		<style>
.notestable td{
background: #E6F5FF;
}

.notestable th{
background: #EFEFEF;
}
		</style>
		<table border="0" cellspacing="1" cellpadding="8" align="center" class="notestable">
			<tr>
				<th>Desc</th>
				<th>Path</th>
			</tr>
			<tr>
				<td>Base Path</td>
				<td>/usr/local/apps/hornetq</td>
			</tr>		
		</table>
	</notes>
	<languages>
		<english-overview>
		<font size="5" color="#182e7a">HornetQ</font> is an open source project to build a multi-protocol, embeddable, very high performance, clustered, asynchronous messaging system.

HornetQ is an example of Message Oriented Middleware (MoM) .
<br /><br />
		HornetQ is provided under a <a href="http://www.apache.org/licenses/LICENSE-2.0.html" target="_blank">Apache v 2.0 Licence.</a>
		</english-overview>
		<english-features>			
			<p><strong>Open Source Software</strong> - HornetQ is released under the Apache v 2.0 Licence.</p>
			<p><strong>Written in Java</strong> - HornetQ runs on any platform with a Java 5 or later runtime.</p>
			<p><strong>JMS and above</strong> - HornetQ supports the JMS 1.1 and 2.0 APIs and also defines its own messaging API for maximum performance and flexibility. Other protocols are planned for upcoming releases.</p>
			<p><strong>Superb performance</strong> - HornetQ class-beating high performance journal provides persistent messaging performance at rates normally seen for non-persistent messaging. Non-persistent messaging performance rocks the boat too.</p>
			<p><strong>POJO-based design</strong> - HornetQ has been designed using POJO and minimal third-party dependencies. You choose how you want to use HornetQ: run it stand-alone, integrate it with JBoss Application Server or another Java server/container or embed it directly inside your own product.</p>
			<p><strong>Solid high availability</strong> - HornetQ offers server replication and automatic client failover to eliminate lost or duplicated messages in case of server failure.</p>
			<p><strong>Flexible clustering</strong> - Create clusters of HornetQ servers that know how to load balance messages. Link geographically distributed clusters over unreliable connections to form a global network. Configure routing of messages in a highly flexible way. Adapt HornetQ to your network topology, not the other way round.</p>
			<p><strong>Management</strong> - HornetQ provides a comprehensive management API to manage &amp; monitor servers. It is integrated seamlessly to the servers to work in a highly available environment.</p>
			<p><strong>Documentation &amp; Examples</strong> - All HornetQ features are documented and examples are provided. Read the documentation, run the examples and leverage HornetQ features to make your messaging code more robust and performant.</p>
		</english-features>
	</languages>
</soft>