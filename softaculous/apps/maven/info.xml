<soft xmlns="http://www.softaculous.com">
	<overview>
		<img src="logo.jpg" style="float:right;" alt="" />{{overview}}
	</overview>
	<features>
		{{features}}
	</features>
	<ratings>
		http://www.webuzo.com/sysapps/java_tools/Apache_Maven
	</ratings>
	<space>
		9504422
	</space>
	<support>
		http://maven.apache.org/users/getting-help.html
	</support>
	<version>
		3.3.3
	</version>
	<mod>5</mod>
	<softversion>
		4.1.9
	</softversion>
	<major>1</major>
	<release_date>28-04-2015</release_date>
	
	<requires>java</requires>
	
	<sysrequires></sysrequires>
	
	<path name="base">/usr/local/apps/maven</path>
	<path name="bin">/usr/local/apps/maven/bin/mvn</path>	
	
	<extract file="maven-$arch.tar.gz">$appsdir</extract>
	<remove>/usr/local/apps/maven</remove>
	
	<notes>
		<center><font size="5" color="#182e7a">Apache Maven Environment :</font></center><br />
		<style>
.notestable td{
background: #E6F5FF;
}

.notestable th{
background: #EFEFEF;
}
		</style>
		<table border="0" cellspacing="1" cellpadding="8" align="center" class="notestable">
			<tr>
				<th>Desc</th>
				<th>Path</th>
			</tr>
			<tr>
				<td>Base Path</td>
				<td>/usr/local/apps/maven</td>
			</tr>
			<tr>
				<td>Bin Path</td>
				<td>/usr/local/apps/maven/bin/mvn</td>
			</tr>
			<tr>
				<td>Documentation</td>
				<td>http://maven.apache.org/guides/index.html</td>
			</tr>
		</table>
	</notes>
	<languages>
		<english-overview>
		<font size="5" color="#182e7a">Apache Maven </font>is a software project management and comprehension tool. Based on the concept of a project object model (POM), Maven can manage a project's build, reporting and documentation from a central piece of information.  
<br /><br />
		<br /><br />
		Apache Maven is distributed under the <a href="http://maven.apache.org/license.html" target="_blank">Apache License</a>
		</english-overview>
		<english-features>
			<ul>
				<li>Simple project setup that follows best practices - get a new project or module started in seconds</li>
				<li>Consistent usage across all projects means no ramp up time for new developers coming onto a project</li>
				<li>Superior dependency management including automatic updating, dependency closures (also known as transitive dependencies)</li>
				<li>Able to easily work with multiple projects at the same time</li>
				<li>A large and growing repository of libraries and metadata to use out of the box, and arrangements in place with the largest Open Source projects for real-time availability of their latest releases</li>
				<li>Extensible, with the ability to easily write plugins in Java or scripting languages</li>
				<li>Instant access to new features with little or no extra configuration</li>
				<li>Ant tasks for dependency management and deployment outside of Maven</li>
				<li>Model based builds: Maven is able to build any number of projects into predefined output types such as a JAR, WAR, or distribution based on metadata about the project, without the need to do any scripting in most cases.</li>
				<li>Coherent site of project information: Using the same metadata as for the build process, Maven is able to generate a web site or PDF including any documentation you care to add, and adds to that standard reports about the state of development of the project. Examples of this information can be seen at the bottom of the left-hand navigation of this site under the &quot;Project Information&quot; and &quot;Project Reports&quot; submenus.</li>
				<li>Release management and distribution publication: Without much additional configuration, Maven will integrate with your source control system such as CVS and manage the release of a project based on a certain tag. It can also publish this to a distribution location for use by other projects. Maven is able to publish individual outputs such as a JAR, an archive including other dependencies and documentation, or as a source distribution.</li>
				<li>Dependency management: Maven encourages the use of a central repository of JARs and other dependencies. Maven comes with a mechanism that your project's clients can use to download any JARs required for building your project from a central JAR repository much like Perl's CPAN. This allows users of Maven to reuse JARs across projects and encourages communication between projects to ensure that backward compatibility issues are dealt with. We are collaborating with the folks at <a class="externalLink" href="http://www.ibiblio.org">Ibiblio</a> who have graciously allowed the central repository to live on their servers.</li>    
			</ul>
		</english-features>
	</languages>
</soft>